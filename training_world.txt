### Telepítési útmutató

#### 1. Hozzon létre egy új ROS csomagot

Amennyiben még nem rendelkezik saját ROS csomaggal, hozza létre a következő parancsokkal:

```bash
cd ~/catkin_ws/src
catkin_create_pkg sajat_csomag_neve rospy std_msgs sensor_msgs
```

Cserélje le a `sajat_csomag_neve` nevet arra, amit használni szeretne. Ezután fordítsa le a workspace-t:

```bash
cd ~/catkin_ws
catkin_make
```

Majd forrásolja be a workspace-t:

```bash
source ~/catkin_ws/devel/setup.bash
```

#### 2. A `.world` fájl elhelyezése a csomagban

Másolja a `custom_world.world` fájlt a következő helyre:

```
~/catkin_ws/src/sajat_csomag_neve/worlds/custom_world.world
```

Ellenőrizze, hogy a fájl elérhető ezen az útvonalon.

#### 3. A `custom_world.launch` fájl elhelyezése a `launch` mappában

Amennyiben a csomagjában még nincs `launch` mappa, hozzon létre egyet:

```bash
mkdir -p ~/catkin_ws/src/sajat_csomag_neve/launch
```

Másolja a `custom_world.launch` fájlt ebbe a mappába:

```
~/catkin_ws/src/sajat_csomag_neve/launch/custom_world.launch
```

#### 4. A `custom_world.launch` fájl konfigurációjának ellenőrzése

Győződjön meg róla, hogy a `custom_world.launch` fájlban megfelelően van beállítva a `.world` fájl elérési útvonala:

```xml
<launch>
  <arg name="world_file" default="$(find sajat_csomag_neve)/worlds/custom_world.world"/>
  
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(arg world_file)" />
    <arg name="use_sim_time" value="true"/>
  </include>
</launch>
```

Ne felejtse el lecserélni a `sajat_csomag_neve` szöveget a saját csomagnevére.

#### 5. A ROS és Gazebo folyamatok újraindítása

A beállítások után indítsa újra a ROS-t és a Gazebo-t az új világfájllal:

```bash
roslaunch sajat_csomag_neve custom_world.launch
```

#### Ellenőrzés

A Gazebo szimulációnak most a `custom_world.world` fájllal kell indulnia, amely tartalmazza a világban elhelyezett akadályokat.
